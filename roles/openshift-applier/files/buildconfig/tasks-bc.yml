kind: List
apiVersion: v1
items:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: "tasks-bc"
  spec:
    triggers:
          - github:
              secret: 5Mlic4Le
            type: GitHub
    strategy:
      type: "JenkinsPipeline"
      jenkinsPipelineStrategy:
        jenkinsfile: |
  node {
    stage ("Build")
    echo '*** Build Starting ***'
    openshiftBuild bldCfg: 'tasks-bc', buildName: '', checkForTriggeredDeployments: 'false', commitID: '', namespace: '', showBuildLogs: 'false', verbose: 'false', waitTime: ''
    openshiftVerifyBuild apiURL: 'https://lb.mitzicom.com', authToken: '', bldCfg: 'tasks-bc', checkForTriggeredDeployments: 'false', namespace: '', verbose: 'false'
    echo '*** Build Complete ***'

    stage ("Deploy and Verify in Development Env")
    echo '*** Deployment Starting ***'
    openshiftDeploy apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: '', verbose: 'false', waitTime: ''
    openshiftVerifyDeployment apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: '', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: ''
    echo '*** Deployment Complete ***'

    echo '*** Service Verification Starting ***'
    openshiftVerifyService apiURL: 'https://lb.mitzicom.com', authToken: '', namespace: 'cicd-dev', svcName: 'tasks-bc', verbose: 'false'
    echo '*** Service Verification Complete ***'
    openshiftTag(srcStream: 'tasks-bc', srcTag: 'latest', destStream: 'tasks-bc', destTag: 'testready')

    stage ('Deploy and Test in Testing Env')
    echo '*** Deploy testready build in cicd-test project  ***'
    openshiftDeploy apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: 'cicd-test', verbose: 'false', waitTime: ''

    openshiftVerifyDeployment apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: 'cicd-test', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: '10'
    sh 'curl http://tasks-bc-cicd-test.apps.na39.openshift.opentlc.com/data/'

    stage ('Promote and Verify in Production Env')
    echo '*** Waiting for Input ***'
    input 'Should we deploy to Production?'
    openshiftTag(srcStream: 'tasks-bc', srcTag: 'testready', destStream: 'tasks-bc', destTag: 'prodready')
    echo '*** Deploying to Production ***'
    openshiftDeploy apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: 'cicd-prod', verbose: 'false', waitTime: ''
    openshiftVerifyDeployment apiURL: 'https://lb.mitzicom.com', authToken: '', depCfg: 'tasks-dc', namespace: 'cicd-prod', replicaCount: '1', verbose: 'false', verifyReplicaCount: 'false', waitTime: '10'
    sleep 10
    sh 'curl http://tasks-bc-cicd-prod.apps.na.openshift.opentlc.com/data/'
  }

metadata: {}
